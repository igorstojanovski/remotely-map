{
  "openapi": "3.0.1",
  "info": {
    "title": "Places API",
    "description": "API for managing places and their photos",
    "contact": {
      "name": "Igor Stojanovski",
      "email": "contact@igorski.co"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Local development server"
    }
  ],
  "tags": [
    {
      "name": "Places",
      "description": "Places management APIs"
    }
  ],
  "paths": {
    "/api/places/{id}": {
      "get": {
        "tags": [
          "Places"
        ],
        "summary": "Get place by ID",
        "description": "Retrieves a specific place by its ID",
        "operationId": "getPlaceById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Place ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Place not found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PlaceResponse"
                }
              }
            }
          },
          "200": {
            "description": "Place found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PlaceResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Places"
        ],
        "summary": "Update a place",
        "description": "Updates an existing place with new details",
        "operationId": "updatePlace",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Place ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlaceRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Place not found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PlaceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PlaceResponse"
                }
              }
            }
          },
          "200": {
            "description": "Place updated successfully",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PlaceResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Places"
        ],
        "summary": "Delete a place",
        "description": "Deletes a place by its ID",
        "operationId": "deletePlace",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Place ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Place not found"
          },
          "204": {
            "description": "Place deleted successfully"
          }
        }
      }
    },
    "/api/places": {
      "get": {
        "tags": [
          "Places"
        ],
        "summary": "Get all places",
        "description": "Retrieves a paginated list of all places",
        "operationId": "getAllPlaces",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number (0-based)",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved places",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Places"
        ],
        "summary": "Create a new place",
        "description": "Creates a new place with the provided details",
        "operationId": "createPlace",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlaceRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Place created successfully",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PlaceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PlaceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/places/{id}/photos": {
      "post": {
        "tags": [
          "Places"
        ],
        "summary": "Upload a photo",
        "description": "Uploads a photo for a specific place",
        "operationId": "uploadPhoto",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Place ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "file"
                ],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "Photo file",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Place not found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PhotoUploadResponse"
                }
              }
            }
          },
          "201": {
            "description": "Photo uploaded successfully",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PhotoUploadResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid file",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PhotoUploadResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/places/search": {
      "get": {
        "tags": [
          "Places"
        ],
        "summary": "Search places by text",
        "description": "Searches places by name, description, or city",
        "operationId": "searchPlaces",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Search query for name or description",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "city",
            "in": "query",
            "description": "Filter by city",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number (0-based)",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved search results",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/places/nearby": {
      "get": {
        "tags": [
          "Places"
        ],
        "summary": "Search places nearby",
        "description": "Finds places within a specified radius of given coordinates",
        "operationId": "getPlacesNearby",
        "parameters": [
          {
            "name": "lat",
            "in": "query",
            "description": "Latitude",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "lng",
            "in": "query",
            "description": "Longitude",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "radius",
            "in": "query",
            "description": "Search radius in kilometers",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double",
              "default": 5.0
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number (0-based)",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved nearby places",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "PlaceRequest": {
        "required": [
          "address",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "description": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string"
          },
          "address": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "rating": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "AddressResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "street": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "LocationResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PlaceResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/AddressResponse"
          },
          "location": {
            "$ref": "#/components/schemas/LocationResponse"
          },
          "rating": {
            "type": "number",
            "format": "double"
          },
          "photos": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PhotoUploadResponse": {
        "type": "object",
        "properties": {
          "photoUrl": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PaginatedResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "hasNext": {
            "type": "boolean"
          },
          "hasPrevious": {
            "type": "boolean"
          }
        }
      }
    }
  }
}