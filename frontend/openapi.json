{
    "openapi": "3.0.1",
    "info": {
        "title": "Places API",
        "description": "API for managing places and their photos",
        "contact": {
            "name": "Igor Stojanovski",
            "email": "contact@igorski.co"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "servers": [
        {
            "url": "http://localhost:8080",
            "description": "Local development server"
        }
    ],
    "tags": [
        {
            "name": "Places",
            "description": "Places management APIs"
        }
    ],
    "paths": {
        "/api/places/{id}": {
            "get": {
                "tags": [
                    "Places"
                ],
                "summary": "Get place by ID",
                "description": "Retrieves a specific place by its ID",
                "operationId": "getPlaceById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Place ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Place found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlaceResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Place not found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlaceResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Places"
                ],
                "summary": "Update a place",
                "description": "Updates an existing place with new details",
                "operationId": "updatePlace",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Place ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PlaceRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Place updated successfully",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlaceResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Place not found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlaceResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlaceResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Places"
                ],
                "summary": "Delete a place",
                "description": "Deletes a place by its ID",
                "operationId": "deletePlace",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Place ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "Place not found"
                    },
                    "204": {
                        "description": "Place deleted successfully"
                    }
                }
            }
        },
        "/api/places": {
            "get": {
                "tags": [
                    "Places"
                ],
                "summary": "Get all places",
                "description": "Retrieves a paginated list of all places",
                "operationId": "getAllPlaces",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number (0-based)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved places",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Places"
                ],
                "summary": "Create a new place",
                "description": "Creates a new place with the provided details",
                "operationId": "createPlace",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PlaceRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Place created successfully",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlaceResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlaceResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/places/{id}/photos": {
            "post": {
                "tags": [
                    "Places"
                ],
                "summary": "Upload a photo",
                "description": "Uploads a photo for a specific place",
                "operationId": "uploadPhoto",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Place ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "file"
                                ],
                                "type": "object",
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "description": "Photo file",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Photo uploaded successfully",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PhotoUploadResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Place not found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PhotoUploadResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid file",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PhotoUploadResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "PlaceRequest": {
                "required": [
                    "address",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string"
                    },
                    "description": {
                        "maxLength": 1000,
                        "minLength": 0,
                        "type": "string"
                    },
                    "address": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string"
                    },
                    "rating": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "PlaceResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    },
                    "rating": {
                        "type": "number",
                        "format": "double"
                    },
                    "photos": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "PhotoUploadResponse": {
                "type": "object",
                "properties": {
                    "photoUrl": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "PaginatedResponse": {
                "type": "object",
                "properties": {
                    "content": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "hasNext": {
                        "type": "boolean"
                    },
                    "hasPrevious": {
                        "type": "boolean"
                    }
                }
            }
        }
    }
}