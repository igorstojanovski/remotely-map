/* tslint:disable */
/* eslint-disable */
/**
 * Places API
 * API for managing places and their photos
 *
 * The version of the OpenAPI document: 1.0
 * Contact: contact@igorski.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PhotoUploadResponse
 */
export interface PhotoUploadResponse {
    /**
     * 
     * @type {string}
     * @memberof PhotoUploadResponse
     */
    photoUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof PhotoUploadResponse
     */
    message?: string;
}

/**
 * Check if a given object implements the PhotoUploadResponse interface.
 */
export function instanceOfPhotoUploadResponse(value: object): value is PhotoUploadResponse {
    return true;
}

export function PhotoUploadResponseFromJSON(json: any): PhotoUploadResponse {
    return PhotoUploadResponseFromJSONTyped(json, false);
}

export function PhotoUploadResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PhotoUploadResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'photoUrl': json['photoUrl'] == null ? undefined : json['photoUrl'],
        'message': json['message'] == null ? undefined : json['message'],
    };
}

export function PhotoUploadResponseToJSON(json: any): PhotoUploadResponse {
    return PhotoUploadResponseToJSONTyped(json, false);
}

export function PhotoUploadResponseToJSONTyped(value?: PhotoUploadResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'photoUrl': value['photoUrl'],
        'message': value['message'],
    };
}

