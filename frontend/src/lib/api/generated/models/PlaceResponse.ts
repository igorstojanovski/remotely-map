/* tslint:disable */
/* eslint-disable */
/**
 * Places API
 * API for managing places and their photos
 *
 * The version of the OpenAPI document: 1.0
 * Contact: contact@igorski.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { LocationResponse } from './LocationResponse';
import {
    LocationResponseFromJSON,
    LocationResponseFromJSONTyped,
    LocationResponseToJSON,
    LocationResponseToJSONTyped,
} from './LocationResponse';
import type { AddressResponse } from './AddressResponse';
import {
    AddressResponseFromJSON,
    AddressResponseFromJSONTyped,
    AddressResponseToJSON,
    AddressResponseToJSONTyped,
} from './AddressResponse';

/**
 * 
 * @export
 * @interface PlaceResponse
 */
export interface PlaceResponse {
    /**
     * 
     * @type {string}
     * @memberof PlaceResponse
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof PlaceResponse
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof PlaceResponse
     */
    description?: string;
    /**
     * 
     * @type {AddressResponse}
     * @memberof PlaceResponse
     */
    address?: AddressResponse;
    /**
     * 
     * @type {LocationResponse}
     * @memberof PlaceResponse
     */
    location?: LocationResponse;
    /**
     * 
     * @type {number}
     * @memberof PlaceResponse
     */
    rating?: number;
    /**
     * 
     * @type {Array<string>}
     * @memberof PlaceResponse
     */
    photos?: Array<string>;
    /**
     * 
     * @type {Date}
     * @memberof PlaceResponse
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof PlaceResponse
     */
    updatedAt?: Date;
}

/**
 * Check if a given object implements the PlaceResponse interface.
 */
export function instanceOfPlaceResponse(value: object): value is PlaceResponse {
    return true;
}

export function PlaceResponseFromJSON(json: any): PlaceResponse {
    return PlaceResponseFromJSONTyped(json, false);
}

export function PlaceResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlaceResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'address': json['address'] == null ? undefined : AddressResponseFromJSON(json['address']),
        'location': json['location'] == null ? undefined : LocationResponseFromJSON(json['location']),
        'rating': json['rating'] == null ? undefined : json['rating'],
        'photos': json['photos'] == null ? undefined : json['photos'],
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'updatedAt': json['updatedAt'] == null ? undefined : (new Date(json['updatedAt'])),
    };
}

export function PlaceResponseToJSON(json: any): PlaceResponse {
    return PlaceResponseToJSONTyped(json, false);
}

export function PlaceResponseToJSONTyped(value?: PlaceResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'description': value['description'],
        'address': AddressResponseToJSON(value['address']),
        'location': LocationResponseToJSON(value['location']),
        'rating': value['rating'],
        'photos': value['photos'],
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'updatedAt': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),
    };
}

